깃허브 링크 - https://github.com/wntpdnjs/mission5.git

도메인 : 모델링된 개념, 엔터티, 규칙 등이 도메인에 포함된다.
도메인 지식은 애플리케이션의 핵심 로직을 정의하고, 비즈니스 문제를 해결하는 데 필요한 구조와 행동을 결정하는 데 중요한 역할을 한다.

양방향 매핑 : 객체 관계 모델링에서 두 엔터티가 서로를 참조하여 양쪽에서 관계를 조회할 수 있도록 설정하는 방식이다.
예를 들어, Order와 Customer 엔터티가 양방향 매핑을 통해 서로를 참조하면, Order에서 Customer를 조회할 수 있고,
반대로 Customer에서도 Order를 조회할 수 있다. 이를 통해 관계의 일관성을 유지할 수 있지만,
무한 루프나 데이터 무결성 문제를 방지하기 위해 관계 관리 주체를 명확히 설정해야 한다.

N+1 문제 :  ORM(Object-Relational Mapping) 환경에서 발생하는 성능 문제로, 한 번의 조회로 N개의 데이터에 접근할 때 추가적인 쿼리가 N번 발생하는 상황을 의미한다. 예를 들어, Order 목록을 조회할 때 각 Order와 관련된 Customer 데이터를 매번 개별 쿼리로 가져오게 되면, 1개의 조회에 이어 추가로 N개의 쿼리가 실행되어 성능 저하가 발생한다.
이를 해결하기 위해 JOIN FETCH나 Entity Graph 등을 사용하여 필요한 데이터를 한 번에 가져오도록 최적화할 수 있다.






